#!/usr/bin/env php
<?php

use AlphaRock\Core\Cli\CliParser;
use AlphaRock\Core\Common\Time;
use AlphaRock\Core\Static\MonkeyCluster;
use AlphaRock\Core\Static\Log;
use AlphaRock\Core\Database\Query\SQL;

require_once __DIR__ . "/src/alpha-quicksight.php";

/** @var CliParser $Cli */
$day = $Cli->getOption('day', Time::today());
Time::toDate($day);
$next = Time::generate($day, Time::MYSQL_DATE, '+1 day');

$input = <<<SQL
    SELECT '$day'::TIMESTAMP(0) as "start_ts",
           '$next'::TIMESTAMP(0) as "end_ts",
           'quicksight|min' as "script_tag"
SQL;

// DB Overload Protection
MonkeyCluster::getActiveQueryCount('quicksight|min', 1);
MonkeyCluster::getActiveQueriesForUser(null, 50);
MonkeyCluster::checkDbPerformance();

Log::debug($input);
Log::info("Aggregating Minute data for $day (avg7d, tradingdata, exposure)");;
$result = MonkeyCluster::query(SQL::fromFile(__DIR__ . "/../sql/data/generate_minute.sql", ['{script_input}' => $input]));
$queryTimeSec = round($result->getTime(), 3);
$rowCount = $result->getRowCount();
Log::info("Created Aggregate Minute data $day ($rowCount rows)");;
Log::debug("$queryTimeSec sec");

// Script Definition
$fileMap = [
    "Intraday Performance" => "intraday/refresh_intraday.sql",
    "Intraday Performance by Exchange" => "intraday/refresh_intraday_by_exchange.sql",
    "Intraday Performance by Account" => "intraday/refresh_intraday_by_account.sql",
];

foreach ($fileMap as $job => $file) {
    $sql = SQL::fromFile( __DIR__ . "/../sql/" . $file);

    Log::info("Refreshing Materialized View: $job");
    $result = MonkeyCluster::query($sql);
    $queryTimeSec = round($result->getTime(), 3);
    $rowCount = $result->getRowCount();

    Log::debug("$queryTimeSec sec");
}
