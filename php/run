#!/usr/bin/env php
<?php

use AlphaRock\Core\Cli\CliParser;
use AlphaRock\Core\Common\Time;
use AlphaRock\Core\Database\Query\SQL;
use AlphaRock\Core\Log\LogLevel;
use AlphaRock\Core\Static\Log;
use AlphaRock\Core\Static\MonkeyCluster;

require_once __DIR__ . "/../vendor/autoload.php";

exit;
Log::setLogLevel(LogLevel::DEBUG);

// Script Definition
$fileMap = [
    "tradingdata" => "data/generate_tradingdata.sql",
    "tradingdataClean" => "data/clean_tradingdata.sql",
    "exposureClean" => "data/clean_exposure.sql",
];

// Replacements
$Cli = new CliParser($argv);
$start = $Cli->getOption('start', Time::generate('90 minutes ago', Time::MYSQL_MINUTE));
$end = $Cli->getOption('end', Time::generate('15 minutes ago', Time::MYSQL_MINUTE));
$day = $Cli->getOption('day', Time::generate('today', Time::MYSQL_DATE));
$scriptInput = <<<SQL
    SELECT CURRENT_TIMESTAMP::timestamp as "now",
           CURRENT_DATE::timestamp as "today",
           '$day'::timestamp as "day",
           '$start'::timestamp as "start",
           '$end'::timestamp as "end"
SQL;

Log::debug("\n$scriptInput");

// Get the Script to run
$availableScripts = json_encode($fileMap, JSON_UNESCAPED_SLASHES | JSON_PRETTY_PRINT);
$job = $argv[1] ?? 'empty';
if ($job === 'empty') {
    Log::error("SQL script must be set. Available commands: \n{$availableScripts}");
    exit;
}

foreach ($Cli->args as $job) {
    print "\n\n";
    if (!array_key_exists($job, $fileMap)) {
        Log::error("'$job' is no valid SQL script. Available commands:");
        continue;
    }
    $sql = SQL::fromFile(
        filepath: __DIR__ . "/../sql/" . $fileMap[$job],
        replacements: [ '{script_input}' => $scriptInput]
    );

    // Run the script
    Log::info("Executing SQL script: {$fileMap[$job]}");
    $result = MonkeyCluster::query($sql);
    $queryTimeSec = round($result->getTime(), 3);
    $rowCount = $result->getRowCount();

    Log::info("$rowCount rows affected / $queryTimeSec sec");
}
